int Rational::is_error() const{                                     //ERROR CONDITIONS.... more..??
    string test = to_string(_d);
    string test2 = to_string(_n);
    if (_d == 0){                                                   // 1) Denominator = 0 -> undefined
        return 1; 
    } else if (_d>MAX || _d<-MAX){                   //48(0)// 4) user enters NON-INTEGER value for denominator (isdigit returns a #>0 if a digit, returns 0 if NOT a digit)
        return 2;                  
    } else if (_n>MAX || _n<-MAX){                                   // 5) user enters NON-INTEGER value for numerator
        return 3;
    }
    int length_d = 1, length_n = 1;
    int d = _d, n = _n;
    if (d>0){
        for (length_d = 0; d>0; length_d++){
            d = d/10;
        }
        for (int i=0; i<length_d; i++){
        if (isdigit(test[i]) == 0){
            return 4;
        }
    }
    for (int i=0; i<length_n; i++){
        if (isdigit(test2[i]) == 0){
            return 5;
        }
    }
    }
   
    return -1;                                                  
}
---------------OUTPUT--------------------
ENTER FR_1: 10/1v
10/1 + 4/19 = 194/19
10/1 - 4/19 = 186/19
10/1 * 4/19 = 40/19
10/1 / 4/19 = 190/4
r88: 1/4
4/6 --- 3/8
r88 is now:  UNDEFINED
4/97 --- 3/8
r88 error state: 1
r88 error descr: Denominator is 0.
r88.reset():
r88 is now: 0/1

